# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Sets up .Net Core SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.101
          
      # publishes blazor project to the release-folder
      - name: Publish .NET Core Project
        run: dotnet publish -c Release -o release --nologo

      # changes the base-tag in the index.html from '/' to 'PlaygroundSVG' to match Github Pages repository subdirectory
      - name: Change base-tag in index.html from / to PlaygroundSVG
        run: sed -i 's/<base href="\/" \/>/<base href="\/GitHubPagesDemo\/" \/>/g' release/wwwroot/index.html
        
      # add .nojekyll file to tell Github pages to not treat this as a Jekyll project.  (Allow files and folders with underscore)
      - name: Add .nojekyll file
        run: touch release/wwwroot/.nojekyll

      # commit
      - name: Commit wwwroot to Github Pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: release/wwwroot
